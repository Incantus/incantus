name = 'Lure'
cardnum = 276
expansion = '10E'
type = characteristic('Enchantment')
supertype = no_characteristic()
subtypes = characteristic(['Aura'])
cost = '1GG'
color = characteristic(['G'])
text = ['Enchant creature', 'All creatures able to block enchanted creature do so.']

target_type = isCreature
out_play_role.abilities = [CastPermanentSpell(card, cost,
                               target=Target(target_types=target_type),
                               effects=AttachToPermanent())]
subrole = Aura(target_type)

in_play_role = Permanent(card, subrole)

#################################

def checkBlock(self, blocking_list, nonblockers):
    # Check to see that all creatures that can block are blocking
    if not self.card in blocking_list: return True
    if not self.canBeBlocked(): return True
    self_blockers = set(blocking_list[self.card])
    defenders = set(sum(blocking_list.values(), [])).union(nonblockers)
    return self_blockers == set([blocker for blocker in defenders if blocker.canBlock() and blocker.canBlockAttacker(self.card) and self.card.canBeBlockedBy(blocker)])


subrole.attached_abilities = [AuraStaticAbility(card,
                                        effects=GiveKeyword(lambda role, checkBlock=checkBlock: override(role, "checkBlock", checkBlock, combiner=logical_and), keyword="Must be blocked if able", expire=False))
]

#################################