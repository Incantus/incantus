name = 'Timberwatch Elf'
cardnum = 140
expansion = 'Legions'
type = characteristic('Creature')
supertype = no_characteristic()
subtypes = characteristic(['Elf'])
cost = '2G'
color = characteristic(['G'])
text = ['T Target creature gets +X/+X until end of turn, where X is the number of Elves in play.']

out_play_role.abilities = [CastPermanentSpell(card, cost)]
subrole = Creature(1, 2)
in_play_role = Permanent(card, subrole)

#################################

num_elves = LazyInt(lambda self=card:
len(self.controller.play.get(isPermanent.with_condition(lambda c: c.subtypes == "Elf"))) + len(self.controller.opponent.play.get(isPermanent.with_condition(lambda c: c.subtypes == "Elf"))))

subrole.abilities = [ActivatedAbility(
	card,
	cost=TapCost(),
	target=Target(target_types=isCreature),
	effects=AugmentPowerToughness(power=num_elves, toughness=num_elves))]

#################################