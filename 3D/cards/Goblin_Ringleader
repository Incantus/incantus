name = 'Goblin Ringleader'
cardnum = 62
expansion = 'Apocalypse'
type = characteristic('Creature')
supertype = no_characteristic()
subtypes = characteristic(['Goblin'])
cost = '3R'
color = characteristic(['R'])
text = ['Haste', 'When Goblin Ringleader comes into play, reveal the top four cards of your library. Put all Goblin cards revealed this way into your hand and the rest on the bottom of your library.']

out_play_role.abilities = [CastPermanentSpell(card, cost)]
subrole = Creature(2, 2)
in_play_role = Permanent(card, subrole)

#################################

haste(subrole)

class RevealTop4Cards(Effect):
  def __call__(self, card, target):
    controller = card.controller
    top_cards = controller.library.top(number=4)
    controller.revealCard(top_cards)
    controller.opponent.revealCard(top_cards)
    for c in top_cards:
      if c.subtypes == "Goblin": controller.moveCard(c, c.zone, controller.hand)
      else: controller.moveCard(c, c.zone, controller.library, position="bottom")
  def __str__(self):
    return "Reveal top 4 cards. Put all Goblin cards into your hand, and the rest on the bottom of your library"

subrole.triggered_abilities = [TriggeredAbility(
	card,
	trigger=EnterTrigger("play"),		
	match_condition = SelfMatch(card),
	ability = Ability(
		card,
		effects=RevealTop4Cards()))]


#################################