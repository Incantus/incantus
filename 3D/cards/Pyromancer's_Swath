name = 'Pyromancer\'s Swath'
cardnum = 104
expansion = 'Future Sight'
type = characteristic('Enchantment')
supertype = no_characteristic()
subtypes = no_characteristic()
cost = '2R'
color = characteristic(['R'])
text = ["If an instant or sorcery source you control would deal damage to a creature or player, it deals that much damage plus 2 to that creature or player instead.", "At end of turn, discard your hand."]

out_play_role.abilities = [CastPermanentSpell(card, cost)]
subrole = Enchantment()

in_play_role = Permanent(card, subrole)

#################################

subrole.triggered_abilities = [TriggeredAbility(card,
                                        trigger = Trigger(event=EndPhaseEvent()),
					match_condition= lambda sender: True,
                                        ability = Ability(card, effects=DiscardCard(number=-1)))
]

condition = lambda self, amt, source, combat, card=card: isSpell(source) and source.controller == card.controller
def plusTwoDamage(self, amt, source, combat=False):
    '''Pyromancer's Swath - damage + 2'''
    self.assignDamage(amt+2, source, combat)

from Player import Player
subrole.static_abilities = [GlobalStaticAbility(card,
                                effects=[OverrideGlobalReplacement(plusTwoDamage, "assignDamage", Creature, expire=False, condition=condition),
                                         OverrideGlobalReplacement(plusTwoDamage, "assignDamage", Player, expire=False, condition=condition)])
]

#################################